resource clusterdb {
  protocol C;
  handlers {
    pri-on-incon-degr "/usr/lib/drbd/notify-pri-on-incon-degr.sh; /usr/lib/drbd/notifyemergency-reboot.sh; echo b > /proc/sysrq-trigger ; reboot -f";
    pri-lost-after-sb "/usr/lib/drbd/notify-pri-lost-after-sb.sh; /usr/lib/drbd/notifyemergency-reboot.sh; echo b > /proc/sysrq-trigger; reboot -f";
    local-io-error "/usr/lib/drbd/notify-io-error.sh; /usr/lib/drbd/notify-emergencyshutdown.sh; echo o > /proc/sysrq-trigger ; halt -f";
    fence-peer "/usr/lib/drbd/crm-fence-peer.sh";
  }
  startup {
    degr-wfc-timeout 120;
    outdated-wfc-timeout 2; 
  }
  disk {
    on-io-error detach;
  }
  net {
   cram-hmac-alg "sha1";
   shared-secret "clusterdb";
   after-sb-0pri disconnect;
   after-sb-1pri disconnect;
   after-sb-2pri disconnect;
   rr-conflict disconnect;

  }
  syncer {
   rate 150M;
   al-extents 257;
   on-no-data-accessible io-error;
  }
  on node1 {
    device /dev/drbd0;
    disk /dev/vdb1;
    address 192.168.122.110:7788;
    flexible-meta-disk internal;
  }
 on node2 {
    device /dev/drbd0;
    disk /dev/vdb1;
    address 192.168.122.107:7788;
    meta-disk internal;
  }
}


resource clusterdb1 {

  protocol A;

  stacked-on-top-of clusterdb {
    device    /dev/drbd10;
    address   192.168.122.100:7788;
  }

  on node3 {
    device    /dev/drbd10;
    disk      /dev/vdb1;
    address   192.168.122.216:7788;
    meta-disk internal;
}
}
http://linux.alanstudio.hk/drbd_3node_ha.htm
drbdadm --stacked adjust clusterdb1 
 drbdadm --stacked  primary clusterdb1
  }

}


filter = [ "r|/dev/vdb1|", "a|drbd1|", "r|/dev/disk/*|", "r|/dev/block/*|", "r|.*|" ]

 [root@server1,2]# drbdadm create-md drbd0
[root@server1,2]# /etc/init.d/drbd start
[root@server1]# drbdadm -- --overwrite-data-of-peer primary drbd0
[root@server1]# cat /proc/drbd
To build up the lower DRBD (res: drbd0) connection between server1(primary) & server2(secondary), After type "cat/proc/drbd" , you will see:

0: cs:SyncSource ro:Primary/Secondary ds:UpToDate/Inconsistent C r---
[==>.................] sync'ed: 15.9% (16057/19073)M

[root@server1]# drbdadm --stacked create-md drbd10
[root@server-dr]# drbdadm create-md drbd10
[root@server1]# drbdadm --stacked adjust drbd10
[root@server-dr]# drbdadm adjust drbd10
[root@server1]# drbdadm --stacked -- --overwrite-data-of-peer primary drbd10
[root@server1]# cat /proc/drbd
To build up the upper DRBD (res: drbd10) connection between server1(primary) & server-dr(secondary), After type "cat/proc/drbd" , you will see:

0: cs:Connected ro:Primary/Secondary ds:UpToDate/UpToDate C r---
1: cs:SyncSource ro:Primary/Secondary ds:UpToDate/Inconsistent A r---
[=============>......] sync'ed: 74.4% (4900/19072)

[root@server1]# mkfs.ext3 drbd10
[root@server1]# mount /dev/drbd10 /home
[root@server1]# df -h
[root@server1]# umount /home
After it is synced, we will use the upper DRBD (drbd10) as our mounting point! But we need format it as ext3 filesystem first. Try mount it and test.

[root@server1,2]# vi /etc/ha.d/haresources
server01 IPaddr::192.168.1.10/24/eth0 drbdupper::drbd10 Filesystem::/dev/drbd10::/home::ext3
Revise haresource of server1,2 which we use "drbdupper" to serve.

[root@server2]# /etc/init.d/heartbeat stop
[root@server1]# /etc/init.d/heartbeat stop
[root@server1]# /etc/init.d/heartbeat start
[root@server2]# /etc/init.d/heartbeat start
Restart heartbeat to reload configure

[root@server1]# cat /proc/drbd
[root@server1]# df -h
[root@server1]# ifconfig |grep -b1 eth0:0
